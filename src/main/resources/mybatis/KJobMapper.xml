<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dimensoft.core.mapper.KJobMapper" >
  <resultMap id="BaseResultMap" type="com.dimensoft.core.model.KJob" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_description" property="jobDescription" jdbcType="VARCHAR" />
    <result column="job_type" property="jobType" jdbcType="INTEGER" />
    <result column="job_path" property="jobPath" jdbcType="VARCHAR" />
    <result column="job_repository_id" property="jobRepositoryId" jdbcType="INTEGER" />
    <result column="job_quartz" property="jobQuartz" jdbcType="INTEGER" />
    <result column="job_record" property="jobRecord" jdbcType="INTEGER" />
    <result column="job_log_level" property="jobLogLevel" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="add_user" property="addUser" jdbcType="INTEGER" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
    <result column="edit_user" property="editUser" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_id, category_id, job_name, job_description, job_type, job_path, job_repository_id, 
    job_quartz, job_record, job_log_level, job_status, add_time, add_user, edit_time, 
    edit_user, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dimensoft.core.model.KJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from k_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from k_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from k_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dimensoft.core.model.KJobExample" >
    delete from k_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dimensoft.core.model.KJob" >
    insert into k_job (job_id, category_id, job_name, 
      job_description, job_type, job_path, 
      job_repository_id, job_quartz, job_record, 
      job_log_level, job_status, add_time, 
      add_user, edit_time, edit_user, 
      del_flag)
    values (#{jobId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, 
      #{jobDescription,jdbcType=VARCHAR}, #{jobType,jdbcType=INTEGER}, #{jobPath,jdbcType=VARCHAR}, 
      #{jobRepositoryId,jdbcType=INTEGER}, #{jobQuartz,jdbcType=INTEGER}, #{jobRecord,jdbcType=INTEGER}, 
      #{jobLogLevel,jdbcType=VARCHAR}, #{jobStatus,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{addUser,jdbcType=INTEGER}, #{editTime,jdbcType=TIMESTAMP}, #{editUser,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dimensoft.core.model.KJob" >
    insert into k_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobDescription != null" >
        job_description,
      </if>
      <if test="jobType != null" >
        job_type,
      </if>
      <if test="jobPath != null" >
        job_path,
      </if>
      <if test="jobRepositoryId != null" >
        job_repository_id,
      </if>
      <if test="jobQuartz != null" >
        job_quartz,
      </if>
      <if test="jobRecord != null" >
        job_record,
      </if>
      <if test="jobLogLevel != null" >
        job_log_level,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="addUser != null" >
        add_user,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editUser != null" >
        edit_user,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        #{jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null" >
        #{jobType,jdbcType=INTEGER},
      </if>
      <if test="jobPath != null" >
        #{jobPath,jdbcType=VARCHAR},
      </if>
      <if test="jobRepositoryId != null" >
        #{jobRepositoryId,jdbcType=INTEGER},
      </if>
      <if test="jobQuartz != null" >
        #{jobQuartz,jdbcType=INTEGER},
      </if>
      <if test="jobRecord != null" >
        #{jobRecord,jdbcType=INTEGER},
      </if>
      <if test="jobLogLevel != null" >
        #{jobLogLevel,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null" >
        #{addUser,jdbcType=INTEGER},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        #{editUser,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dimensoft.core.model.KJobExample" resultType="java.lang.Integer" >
    select count(*) from k_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update k_job
    <set >
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDescription != null" >
        job_description = #{record.jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null" >
        job_type = #{record.jobType,jdbcType=INTEGER},
      </if>
      <if test="record.jobPath != null" >
        job_path = #{record.jobPath,jdbcType=VARCHAR},
      </if>
      <if test="record.jobRepositoryId != null" >
        job_repository_id = #{record.jobRepositoryId,jdbcType=INTEGER},
      </if>
      <if test="record.jobQuartz != null" >
        job_quartz = #{record.jobQuartz,jdbcType=INTEGER},
      </if>
      <if test="record.jobRecord != null" >
        job_record = #{record.jobRecord,jdbcType=INTEGER},
      </if>
      <if test="record.jobLogLevel != null" >
        job_log_level = #{record.jobLogLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null" >
        job_status = #{record.jobStatus,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addUser != null" >
        add_user = #{record.addUser,jdbcType=INTEGER},
      </if>
      <if test="record.editTime != null" >
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editUser != null" >
        edit_user = #{record.editUser,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update k_job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_description = #{record.jobDescription,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=INTEGER},
      job_path = #{record.jobPath,jdbcType=VARCHAR},
      job_repository_id = #{record.jobRepositoryId,jdbcType=INTEGER},
      job_quartz = #{record.jobQuartz,jdbcType=INTEGER},
      job_record = #{record.jobRecord,jdbcType=INTEGER},
      job_log_level = #{record.jobLogLevel,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      add_user = #{record.addUser,jdbcType=INTEGER},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      edit_user = #{record.editUser,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dimensoft.core.model.KJob" >
    update k_job
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        job_description = #{jobDescription,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null" >
        job_type = #{jobType,jdbcType=INTEGER},
      </if>
      <if test="jobPath != null" >
        job_path = #{jobPath,jdbcType=VARCHAR},
      </if>
      <if test="jobRepositoryId != null" >
        job_repository_id = #{jobRepositoryId,jdbcType=INTEGER},
      </if>
      <if test="jobQuartz != null" >
        job_quartz = #{jobQuartz,jdbcType=INTEGER},
      </if>
      <if test="jobRecord != null" >
        job_record = #{jobRecord,jdbcType=INTEGER},
      </if>
      <if test="jobLogLevel != null" >
        job_log_level = #{jobLogLevel,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null" >
        add_user = #{addUser,jdbcType=INTEGER},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null" >
        edit_user = #{editUser,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dimensoft.core.model.KJob" >
    update k_job
    set category_id = #{categoryId,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_description = #{jobDescription,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=INTEGER},
      job_path = #{jobPath,jdbcType=VARCHAR},
      job_repository_id = #{jobRepositoryId,jdbcType=INTEGER},
      job_quartz = #{jobQuartz,jdbcType=INTEGER},
      job_record = #{jobRecord,jdbcType=INTEGER},
      job_log_level = #{jobLogLevel,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_user = #{addUser,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      edit_user = #{editUser,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>