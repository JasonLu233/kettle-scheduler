<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 加载配置文件 -->

	<context:property-placeholder location="classpath:resource/*.properties"/>

	<!--<bean id="dbPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">  
            <list>  
                <value>classpath:resource/*.properties</value>
            </list>  
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" /> 
    </bean>-->


	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>

	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载 MyBatis 的配置文件 -->
		<!--<property name="configLocation" value="classpath:spring/mybatisMapper.xml"/>-->
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>

		<property name="mapperLocations" value="classpath:mybatis/*Mapper.xml" />

		<!--指定需要使用别名的PO类所在的包-->
		<property name="typeAliasesPackage"
				  value="com.dimensoft.core.model" />

		<!-- 注意其他配置 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!--使用下面的方式配置参数，一行配置一个 -->
						<value>
						</value>
					</property>
				</bean>
			</array>
		</property>

	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--mapper接口所在的包-->
		<property name="basePackage" value="com.dimensoft.core.mapper" />
	</bean>


	<!--事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 使用注解事务，需要添加Transactional注解属性 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>




</beans>
